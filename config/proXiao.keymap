/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&mt { quick_tap_ms = <220>; };

/ {
    macros {
        // Windows sleep key

        win_sleep: win_sleep {
            wait-ms = <50>;
            tap-ms = <5>;
            compatible = "zmk,behavior-macro";
            label = "WIN_SLEEP_KEY";
            #binding-cells = <0>;
            bindings = <&kp LG(X) &kp U &kp S>;
        };
    };
};

/ {
    behaviors {
        LHT: LHT {
            compatible = "zmk,behavior-hold-tap";
            label = "LHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <299>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_GUI ESCAPE  &LHT QUESTION Q  &kp W             &LHT EQUAL E   &kp R  &LHT GRAVE T             &kp Y                     &LHT UNDER U  &LHT EXCLAMATION I  &kp O    &LHT PERCENT P        &mt DEL BACKSPACE
&mt LEFT_SHIFT TAB   &LHT AT_SIGN A   &LHT ASTERISK S   &LHT DOLLAR D  &kp F  &kp G                    &LHT HASH H               &kp J         &kp K               &kp L    &kp SEMI              &mt RSHIFT SQT
&mt LCTRL LEFT_GUI   &kp Z            &LHT AMPERSAND X  &LHT CARET C   &kp V  &LHT LEFT_PARENTHESIS B  &LHT RIGHT_PARENTHESIS N  &LHT MINUS M  &kp COMMA           &kp DOT  &LHT BACKSLASH SLASH  &LHT RIGHT_BRACKET LEFT_BRACKET
                                                        &mo 1          &mo 1  &mt LEFT_ALT SPACE       &mt LS(LEFT_ALT) ENTER    &mo 1         &mo 1
            >;
        };

        lower_layer {
            bindings = <
&kp C_VOL_UP       &none           &kp UP_ARROW      &none       &none  &kp LS(LG(S))  &win_sleep  &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSPACE
&kp C_VOLUME_DOWN  &kp LEFT_ARROW  &kp DOWN          &kp RIGHT   &none  &none          &none       &none  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp RIGHT_SHIFT
&kp K_MUTE         &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &none  &none          &none       &none  &kp N7        &kp N8        &kp N9        &kp N0
                                                     &none       &none  &mo 2          &mo 2       &none  &none
            >;
        };

        raise_layer {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &none  &none  &none  &none  &kp F1  &kp F2  &kp F3  &none
&bt BT_CLR_ALL  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &none  &none  &none  &none  &kp F4  &kp F5  &kp F6  &kp RIGHT_SHIFT
&none           &none          &none          &none          &none  &none  &none  &none  &kp F7  &kp F8  &kp F9  &none
                                              &none          &none  &none  &none  &none  &none
            >;
        };
    };
};
