/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&mt {
    tapping-term-ms = <280>;
    flavor = "balanced";
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
};

&lt {
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

/ {
    macros {
        // Windows sleep key
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        next_input {
            bindings = <&kp LS(LALT)>;
            key-positions = <38 39>;
        };

        window2left {
            bindings = <&kp LS(LG(LEFT))>;
            key-positions = <15 16>;
        };

        window2right {
            bindings = <&kp LS(LG(RIGHT))>;
            key-positions = <19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&none             &kp Q           &kp W       &kp E        &kp R        &kp T        &kp Y        &kp U            &kp I        &kp O       &kp P               &none
&kp ESCAPE        &mt LEFT_GUI A  &mt LALT S  &mt LSHFT D  &mt LCTRL F  &kp G        &kp H        &mt RCTRL J      &mt RSHFT K  &mt RALT L  &mt RGUI SEMICOLON  &kp SQT
&kp LEFT_BRACKET  &kp Z           &kp X       &kp C        &kp V        &kp B        &kp N        &kp M            &kp COMMA    &kp DOT     &kp SLASH           &kp RIGHT_BRACKET
                                              &none        &lt 2 TAB    &lt 1 SPACE  &lt 1 ENTER  &lt 2 BACKSPACE  &none
            >;
        };

        control {
            bindings = <
&none  &tog 4        &none                &kp UP                &none            &kp PG_DN   &kp PG_UP  &none           &kp UP          &none           &tog 4    &none
&none  &kp LEFT_WIN  &mt LALT LEFT_ARROW  &mt LSHFT DOWN_ARROW  &mt LCTRL RIGHT  &kp END     &kp HOME   &mt RCTRL LEFT  &mt RSHFT DOWN  &mt RALT RIGHT  &kp RGUI  &none
&mo 3  &none         &kp C_PREV           &kp C_PLAY_PAUSE      &kp C_NEXT       &kp INSERT  &kp DEL    &kp C_VOL_DN    &kp C_MUTE      &kp C_VOL_UP    &none     &mo 3
                                          &none                 &none            &trans      &trans     &none           &none
            >;
        };

        symbol {
            bindings = <
&none  &kp N1                     &kp N2                     &kp N3                  &kp N4                  &kp N5      &kp N6      &kp N7            &kp N8            &kp N9           &kp N0                &none
&none  &mt LEFT_GUI LS(NUMBER_1)  &mt LEFT_ALT LS(NUMBER_2)  &mt LSHFT LS(NUMBER_3)  &mt LCTRL LS(NUMBER_4)  &kp LS(N5)  &kp LS(N6)  &mt RCTRL LS(N7)  &mt RSHFT LS(N8)  &mt RALT LS(N9)  &mt RIGHT_GUI LS(N0)  &none
&none  &none                      &kp PIPE                   &kp TILDE               &kp UNDER               &kp PLUS    &kp EQUAL   &kp MINUS         &kp GRAVE         &kp BACKSLASH    &none                 &none
                                                             &none                   &trans                  &trans      &trans      &trans            &none
            >;
        };

        func {
            bindings = <
&none   &mt F11 F1  &mt F12 F2    &mt F13 F3    &mt F14 F4    &mt F15 F5  &mt F16 F6   &mt F17 F7  &mt F18 F8  &mt F19 F9    &mt F20 F10  &none
&none   &kp LGUI    &kp LALT      &kp LSHFT     &kp LCTRL     &none       &none        &kp RCTRL   &kp RSHFT   &kp RALT      &kp RGUI     &none
&trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &sys_reset  &bootloader  &bl BL_DEC  &bl BL_INC  &bl BL_CYCLE  &bl BL_TOG   &trans
                                  &none         &none         &trans      &trans       &none       &none
            >;
        };

        game {
            bindings = <
&trans  &kp TAB    &kp Q  &kp W   &kp E     &kp R      &none      &none     &kp UP    &none      &kp ESC  &none
&none   &kp LSHFT  &kp A  &kp S   &kp D     &kp F      &none      &kp LEFT  &kp DOWN  &kp RIGHT  &none    &trans
&none   &kp LCTRL  &kp Z  &kp X   &kp C     &kp V      &kp N1     &kp N2    &kp N3    &kp N4     &kp N5   &none
                          &trans  &kp LALT  &kp SPACE  &kp ENTER  &tog 0    &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
