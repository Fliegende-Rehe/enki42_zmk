/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <220>; };

&mt { quick_tap_ms = <220>; };

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------
            //| LGUI/] |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | RGUI/[ | 
            //| CTRL/` |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | CTRL/' |
            //| LALT/\ |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT/- |
            //                             | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp ESC             &kp Q          &kp W            &mt EQUAL E   &kp R  &mt GRAVE T             &kp Y                    &mt UNDER U  &mt EXCLAMATION I  &kp O    &mt PERCENT P  &mt DEL BACKSPACE
&mt LEFT_SHIFT TAB  &mt AT_SIGN A  &mt ASTERISK S   &mt DOLLAR D  &kp F  &kp G                   &mt HASH H               &kp J        &kp K              &kp L    &kp SEMI       &kp SQT
&mt LCTRL LEFT_GUI  &kp Z          &mt AMPERSAND X  &mt CARET C   &kp V  &mt LEFT_PARENTHESIS B  &mt RIGHT_PARENTHESIS N  &mt MINUS M  &kp COMMA          &kp DOT  &kp FSLH       &mt RIGHT_BRACKET LEFT_BRACKET
                                                    &to 1         &to 2  &mt LEFT_ALT SPACE      &mt LS(LEFT_ALT) ENTER   &to 2        &to 1
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            //|LGUI/CAPS |  *  |  7 |  8  |  9  |  +  |    |  !  |  @  |  #  |  $  |  %  | RGUI/F1 |
            //|CTRL/MENU |  /  |  4 |  5  |  6  |  -  |    |  ^  |  &  |  *  |  (  |  )  | CTRL/F2 |
            //|  LALT/=  |  0  |  1 |  4  |  3  |  .  |    |  ls |  F4 |  F5 |  F6 |  F7 | RALT/F3 |
            //                      | ADJ | ___ | ___ |    | ___ | ___ | ADJ |

            bindings = <
&kp LG(LS(S))   &none     &kp UP_ARROW    &none      &none   &kp C_VOLUME_UP  &kp C_NEXT        &none   &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3
&kp LEFT_SHIFT  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &none   &kp C_VOL_DN     &kp C_PLAY_PAUSE  &none   &none  &kp NUMBER_4  &kp N5        &kp NUMBER_6
&none           &none     &none           &none      &none   &kp K_MUTE       &kp C_PREVIOUS    &none   &none  &kp N7        &kp N8        &kp N9
                                          &to 0      &trans  &trans           &trans            &trans  &to 0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            //| LGUI |  VOLU  |  PGUP  | PLAY | HOME | ___  |            | ___  | HOME | PLAY| PGUP | VOLU | RGUI |
            //| CTRL |  VOLD  |  LEFT  |  UP  | DOWN | RGHT |            | RGHT | DOWN | UP  | LEFT | VOLD | CTRL | 
            //| LALT |  MUTE  |  PGDN  |  ___ | END  | ___  |            | ___  | END  | ___ | PGDN | MUTE | RALT |
            //                          | ___ | ___  | ADJ  |            | ADJ  | ___  | ___ |

            bindings = <
&none           &none  &none  &none  &none  &bt BT_CLR  &bootloader  &none  &kp F1  &kp F2   &kp F3   &kp F4
&kp LEFT_SHIFT  &none  &none  &none  &none  &bt BT_NXT  &sys_reset   &none  &kp F5  &kp F6   &kp F7   &kp F8
&kp LCTRL       &none  &none  &none  &none  &none       &none        &none  &kp F9  &kp F10  &kp F11  &kp F12
                              &none  &to 0  &none       &none        &to 0  &none
            >;
        };
    };
};
