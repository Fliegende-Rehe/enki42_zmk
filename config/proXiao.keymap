/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&mt { quick_tap_ms = <220>; };

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

/ {
    behaviors {
        LHT: LHT {
            compatible = "zmk,behavior-hold-tap";
            label = "LHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <299>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------
            //| LGUI/] |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | RGUI/[ | 
            //| CTRL/` |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | CTRL/' |
            //| LALT/\ |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT/- |
            //                             | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&mt LEFT_GUI ESCAPE  &LHT QUESTION Q  &kp W             &LHT EQUAL E   &kp R  &LHT GRAVE T             &kp Y                     &LHT UNDER U  &LHT EXCLAMATION I  &kp O    &LHT PERCENT P        &mt DEL BACKSPACE
&mt LEFT_SHIFT TAB   &LHT AT_SIGN A   &LHT ASTERISK S   &LHT DOLLAR D  &kp F  &kp G                    &LHT HASH H               &kp J         &kp K               &kp L    &kp SEMI              &mt RSHIFT SQT
&mt LCTRL LEFT_GUI   &kp Z            &LHT AMPERSAND X  &LHT CARET C   &kp V  &LHT LEFT_PARENTHESIS B  &LHT RIGHT_PARENTHESIS N  &LHT MINUS M  &kp COMMA           &kp DOT  &LHT BACKSLASH SLASH  &LHT RIGHT_BRACKET LEFT_BRACKET
                                                        &mo 1          &mo 1  &mt LEFT_ALT SPACE       &mt LEFT_ALT ENTER        &mo 1         &mo 1
            >;
        };

        layer_3 {
            bindings = <
&none  &none           &kp UP_ARROW  &none      &none  &kp LS(LG(S))  &LHT C_POWER C_SLEEP_MODE  &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSPACE
&none  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &none  &none          &none                      &none  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp RIGHT_SHIFT
&none  &none           &none         &none      &none  &none          &none                      &none  &kp N7        &kp N8        &kp N9        &kp N0
                                     &none      &none  &mo 2          &mo 2                      &none  &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            //| LGUI |  VOLU  |  PGUP  | PLAY | HOME | ___  |            | ___  | HOME | PLAY| PGUP | VOLU | RGUI |
            //| CTRL |  VOLD  |  LEFT  |  UP  | DOWN | RGHT |            | RGHT | DOWN | UP  | LEFT | VOLD | CTRL | 
            //| LALT |  MUTE  |  PGDN  |  ___ | END  | ___  |            | ___  | END  | ___ | PGDN | MUTE | RALT |
            //                          | ___ | ___  | ADJ  |            | ADJ  | ___  | ___ |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none  &kp F1  &kp F2  &kp F3  &none
&none       &none         &none         &none         &none         &none         &none  &none  &kp F4  &kp F5  &kp F6  &kp RIGHT_SHIFT
&none       &none         &none         &none         &none         &none         &none  &none  &kp F7  &kp F8  &kp F9  &none
                                        &none         &none         &none         &none  &none  &none
            >;
        };
    };
};
