/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};

&lt { tapping-term-ms = <250>; };

/ {
    macros {
        // Windows sleep key
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&none             &kp Q           &kp W       &kp E         &kp R        &kp T        &kp Y        &kp U          &kp I        &kp O       &kp P                   &none
&kp ESCAPE        &mt LEFT_GUI A  &mt LALT S  &mt LSHIFT D  &mt LCTRL F  &kp G        &kp H        &mt LCTRL J    &mt LSHFT K  &mt LALT L  &mt LEFT_GUI SEMICOLON  &kp SQT
&kp LEFT_BRACKET  &kp Z           &kp X       &kp C         &kp V        &kp B        &kp N        &kp M          &kp COMMA    &kp DOT     &kp SLASH               &kp RIGHT_BRACKET
                                              &tog 2        &kp TAB      &lt 1 SPACE  &lt 1 ENTER  &kp BACKSPACE  &tog 2
            >;
        };

        control {
            bindings = <
&none       &none  &none     &kp UP    &none      &none  &none  &none       &kp C_VOL_UP  &none       &none  &none
&kp LA(F4)  &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none  &kp C_PREV  &kp C_VOL_DN  &kp C_NEXT  &none  &kp LG(LS(S))
&none       &none  &none     &none     &none      &none  &none  &none       &none         &none       &none  &none
                             &none     &none      &none  &none  &kp DEL     &none
            >;
        };

        symbol {
            bindings = <
&none  &kp N1                     &kp N2                 &kp N3                  &kp N4                  &kp N5      &kp N6      &kp N7            &kp N8            &kp N9           &kp N0           &none
&none  &mt LEFT_GUI LS(NUMBER_1)  &mt LALT LS(NUMBER_2)  &mt LSHFT LS(NUMBER_3)  &mt LCTRL LS(NUMBER_4)  &kp LS(N5)  &kp LS(N6)  &mt LCTRL LS(N7)  &mt LSHFT LS(N8)  &mt LALT LS(N9)  &mt LGUI LS(N0)  &none
&none  &kp COMMA                  &kp BACKSLASH          &kp TILDE               &kp UNDER               &kp PLUS    &kp EQUAL   &kp MINUS         &kp GRAVE         &kp PIPE         &kp DOT          &none
                                                         &tog 0                  &none                   &mo 3       &mo 3       &none             &tog 0
            >;
        };

        func {
            bindings = <
&trans  &mt F11 F1    &mt F12 F2    &kp F3        &kp F4        &kp F5  &kp F6  &kp F7      &kp F8     &kp F9    &kp F10   &none
&trans  &kp LGUI      &kp LALT      &kp LSHFT     &kp LCTRL     &trans  &trans  &kp LCTRL   &kp LSHFT  &kp LALT  &kp LGUI  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &trans  &trans      &trans     &trans    &trans    &trans
                                    &trans        &trans        &trans  &trans  &bt BT_CLR  &trans
            >;
        };
    };
};
